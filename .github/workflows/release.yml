name: Build and Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
          - os: macos-latest
            goos: darwin
            goarch: arm64
            ext: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      # - name: Generate API code
      #   run: go generate ./api/...

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build -ldflags="-s -w" -o dist/mirako${{ matrix.ext }} ./cmd/cli/

      - name: Create archive (Unix)
        if: matrix.goos != 'windows'
        run: |
          cd dist
          tar -czf mirako-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz mirako${{ matrix.ext }}

      - name: Create archive (Windows)
        if: matrix.goos == 'windows'
        run: |
          cd dist
          powershell Compress-Archive -Path "mirako${{ matrix.ext }}" -DestinationPath "mirako-${{ matrix.goos }}-${{ matrix.goarch }}.zip"

      - name: Upload release asset (Unix)
        if: matrix.goos != 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/mirako-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_name: mirako-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload release asset (Windows)
        if: matrix.goos == 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/mirako-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_name: mirako-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_content_type: application/zip
